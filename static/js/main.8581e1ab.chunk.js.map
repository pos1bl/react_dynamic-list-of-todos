{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onOpen","className","map","todo","id","completed","classNames","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","statusText","json","getAllTodos","TodoFilter","query","onSelect","onChange","event","target","value","filter","placeholder","style","pointerEvents","Loader","TodoModal","close","useState","isLoading","setIsLoading","username","setUsername","useEffect","userId","user","name","finally","href","App","setTodos","setQuery","getOption","setGetOption","setSelectedTodo","getTodos","currentTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8581e1ab.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onOpen: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onOpen,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onOpen(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': selectedTodo?.id !== todo.id,\n                  'fa-eye-slash': selectedTodo?.id === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getAllTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getCompleted = () => {\n  return getAllTodos()\n    .then(todos => todos\n      .filter(todo => todo.completed));\n};\n\nexport const getActive = () => {\n  return getAllTodos()\n    .then(todos => todos\n      .filter(todo => !todo.completed));\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { getActive, getAllTodos, getCompleted } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  query: string;\n  onSelect: (getTodos: () => Promise<Todo[]>) => void;\n  onChange: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onSelect,\n  onChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            switch (event.target.value) {\n              case 'all':\n                onSelect(() => getAllTodos());\n                break;\n              case 'active':\n                onSelect(() => getActive());\n                break;\n              case 'completed':\n                onSelect(() => getCompleted());\n                break;\n              default:\n            }\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => onChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  close: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  close,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(todo.userId)\n      .then(user => setUsername(user.name))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => close(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              ) : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {username}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getAllTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [getOption, setGetOption] = useState<Promise<Todo[]>>(getAllTodos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handleTodos = (getTodos: () => Promise<Todo[]>) => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(currentTodos => setTodos(currentTodos\n        .filter(todo => todo.title\n          .toLowerCase()\n          .includes(query.toLowerCase()))))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    handleTodos(() => getOption);\n  }, [query, getOption]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChange={setQuery}\n                onSelect={setGetOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    selectedTodo={selectedTodo}\n                    onOpen={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          close={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}